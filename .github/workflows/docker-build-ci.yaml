---
name: docker-build-CI

on:
  push:
    branches:
      - main
      - develop/**
    paths:
      - docker
  workflow_dispatch:

env:
  PLATFORMS: linux/amd64,linux/arm64
  GH_REGISTRY: ghcr.io/ninerealmlabs
  D_REGISTRY: docker.io/ninerealmlabs
  IMAGE_NAME: mlflow-server


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # ref: ${{ github.event.workflow_run.sha }}
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date
        id: date
        run: |
          DATE=$(date +'%Y%m%d')
          echo "DATE: ${DATE}"
          echo "::set-output name=DATE::${DATE}"

      - name: Create tags
        id: tag
        run: |
          # get repo references
          BRANCH=$(echo ${GITHUB_REF} | sed s'|refs/heads/||' | sed s'|/|.|')
          SHA=${GITHUB_SHA:0:7}

          # extract mlflow version from dockerfile
          TAG="$(grep 'mlflow==' docker/Dockerfile | xargs | sed s'|mlflow==||g' | sed s'|[[:space:]]||g')"

          PRODTAG="${TAG}-${SHA}"
          FULLTAG="${TAG}-${BRANCH}-${SHA}"
          #---
          echo "BRANCH: ${BRANCH}"
          echo "SHA: ${SHA}"
          echo "TAG: ${TAG}"
          echo "PRODTAG: ${PRODTAG}"
          echo "FULLTAG: ${FULLTAG}"
          #---
          echo "::set-output name=BRANCH::${BRANCH}"
          echo "::set-output name=SHA::${SHA}"
          echo "::set-output name=TAG::${TAG}"
          echo "::set-output name=PRODTAG::${PRODTAG}"
          echo "::set-output name=FULLTAG::${FULLTAG}"

      ######### TEST #########
      ### WAITING FOR akhilerm/tag-push-action TO UPDATE
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      ######### TEST #########

      ### https://github.com/docker/build-push-action
      ### https://github.com/docker/buildx/blob/master/docs/reference/buildx_build.md
      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ env.PLATFORMS }}
          context: docker/
          # file: ./Dockerfile
          build-args: |
            GIT_COMMIT=${{ steps.tag.outputs.SHA }}
            BUILD_DATE=${{ steps.date.outputs.DATE }}
          # cache-from: type=gha
          cache-to: type=registry,ref=${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          push: true
          tags: |
            ${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.TAG }}
            ${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.FULLTAG }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Inspect new image
        run: |
          docker pull ${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.FULLTAG }}
          docker inspect ${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.FULLTAG }}

  ### Push to DockerHub if main branch / "release"
  dockerhub:
    runs-on: ubuntu-latest
    needs: build

    # push to registry on main branch only
    if: needs.build.outputs.BRANCH == 'main'
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # copy image from ghcr to dockerhub
      - name: Push image to alternate registries
        # uses: akhilerm/tag-push-action@v1.1.0
        uses: akhilerm/tag-push-action@main
        with:
          src: ${{ env.GH_REGISTRY }}/${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.FULLTAG }}
          dst: |
            ${{ env.D_REGISTRY }}/${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.TAG }}
            ${{ env.D_REGISTRY }}/${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.PRODTAG }}

      # - name: Push image to alternate registries
      #   # uses: akhilerm/tag-push-action@v1.1.0
      #   uses: akhilerm/tag-push-action@main
      #   with:
      #     src: ${{ env.GH_REGISTRY }}/${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.FULLTAG }}
      #     dst: |
      #       ${{ env.D_REGISTRY }}/${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.PYTHONTAG }}

      # - name: Push image to alternate registries
      #   # uses: akhilerm/tag-push-action@v1.1.0
      #   uses: akhilerm/tag-push-action@main
      #   with:
      #     src: ${{ env.GH_REGISTRY }}/${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.FULLTAG }}
      #     dst: |
      #       ${{ env.D_REGISTRY }}/${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.PRODTAG }}

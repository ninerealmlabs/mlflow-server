---
name: Build Test Tag
# --- Description ------------------------------------------------------------
# - Builds (multi-arch) docker image & caches to ghcr.io (build-image.yaml)
# - Runs test (test-image.yaml)
# - Retags & pushes to docker registry (tag-image.yaml)
# ----------------------------------------------------------------------------

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      source_image:
        description: Parent/Source image name (repository/name)
        required: true
        type: string
        default: python
      source_tag:
        description: Tag of source image
        required: false
        type: string
        default: '3.11-slim-bullseye' # doesn't actually pass default; hacked in in called action
      source_digest:
        description: Digest of source image
        required: false
        type: string
        default: '' # doesn't actually pass default; hacked in in called action
      image_name:
        description: Image name
        required: true
        type: string
        default: mlflow-server
      platforms:
        description: Image platform architectures
        required: true
        type: string
        default: "linux/amd64,linux/arm64"
      gh_registry:
        description: Github registry (ghcr.io/<owner>)
        required: true
        type: string
        default: ghcr.io/ninerealmlabs
      # d_registry:
      #   description: Docker registry (docker.io/<owner>)
      #   required: true
      #   type: string
      owner:
        description: Registry owner/org name
        required: true
        type: string
        default: ninerealmlabs
      version:
        description: MLFlow semver tag
        required: true
        type: string

  workflow_dispatch:
    inputs:
      source_image:
        description: Parent/Source image name (repository/name)
        required: true
        type: string
      source_tag:
        description: Tag of source image
        required: false
        type: string
        default: 'latest' # doesn't actually pass default; hacked in in called action
      source_digest:
        description: Digest of source image
        required: false
        type: string
        default: '' # doesn't actually pass default; hacked in in called action
      image_name:
        description: Image name
        required: true
        type: string
      platforms:
        description: Image platform architectures
        required: true
        type: string
      gh_registry:
        description: Github registry (ghcr.io/<owner>)
        required: true
        type: string
      # d_registry:
      #   description: Docker registry (docker.io/<owner>)
      #   required: true
      #   type: string
      owner:
        description: Registry name
        required: true
        type: string
      version:
        description: MLFlow semver tag
        required: true
        type: string

jobs:
  build-image:
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
      # https://stackoverflow.com/questions/70483902/how-to-actually-clean-up-the-repository-on-self-hosted-runner-after-github-actio
      - name: Cleanup build folder ðŸ§¹
        shell: bash
        run: |
          cd ${{ github.workspace }}
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: Checkout Repo ðŸ›’
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Login to GitHub Container Registry âœ…
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image ðŸ› 
        id: build
        uses: ./.github/actions/build-image-action
        with:
          # yamllint disable rule:colons
          source_image:   ${{ inputs.source_image }}
          source_tag:     ${{ inputs.source_tag }}
          source_digest:  ${{ inputs.source_digest }}
          image_name:     ${{ inputs.image_name }}
          platforms:      ${{ inputs.platforms }}
          gh_registry:    ${{ inputs.gh_registry }}
          owner:          ${{ inputs.owner }}
          version:        ${{ inputs.version }}
          # yamllint enable

---
name: Build image and cache to
description: Build image using docker buildx for multi-arch support

inputs:
  source_image:
    description: Parent/Source full image name (registry/image)
    required: true
  source_tag:
    description: Tag of source image
    required: true
    # default: 'latest' # doesn't actually pass default; hacked in in called action
  source_digest:
    description: Digest of source image
    required: false
    default: '' # doesn't actually pass default; hacked in in called action
  image_name:
    description: Image name
    required: true
  platforms:
    description: Image platform architectures
    required: true
  gh_registry:
    description: Github registry (ghcr.io/<owner>)
    required: true
  owner:
    description: Registry name
    required: true
  version:
    description: MLFlow semver tag
    required: true

outputs:
  image_digest:
    description: Image digest
    value: ${{ steps.build.outputs.digest }}

runs:
  using: composite
  steps:

    - name: Set up QEMU ü¶§
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

    - name: Set up Docker Buildx üê≥
      id: buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Parse source üïµÔ∏è
      id: source
      shell: bash
      run: |
        echo "SOURCE_IMAGE: ${SOURCE_IMAGE}"
        echo "SOURCE_TAG: ${SOURCE_TAG}"
        echo "SOURCE_DIGEST: ${SOURCE_DIGEST}"
        # ------------------------------------------------------------------
        SOURCE_FULLNAME="${SOURCE_IMAGE}:${SOURCE_TAG}"
        [[ "${SOURCE_DIGEST}" == sha256* ]] && SOURCE_FULLNAME="${SOURCE_FULLNAME}@${SOURCE_DIGEST}"
        # ------------------------------------------------------------------
        echo "SOURCE_FULLNAME: ${SOURCE_FULLNAME}"
        # ------------------------------------------------------------------
        echo "source_fullname=${SOURCE_FULLNAME}" >> $GITHUB_OUTPUT
      env:
        SOURCE_IMAGE: ${{ inputs.source_image }}
        SOURCE_TAG: ${{ inputs.source_tag }}
        SOURCE_DIGEST: ${{ inputs.source_digest }}

    - name: Get current date üóì
      id: date
      shell: bash
      run: |
        DATE=$(date +'%Y%m%d')
        echo "DATE: ${DATE}"
        echo "date=${DATE}" >> $GITHUB_OUTPUT

    # - name: Create tags üè∑
    #   id: tags
    #   shell: bash
    #   run: |
    #     if [[ ${{ github.ref }} != 'refs/heads/main' ]]; then
    #       echo "version=${{ inputs.version }}-beta" >> $GITHUB_OUTPUT
    #       echo "Building beta version from branch: ${{ github.ref_name }}"
    #     else
    #       echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
    #       echo "Building release version"
    #     fi
    #     # ------------------------------------------------------------------
    #     GIT_TAG="${GITHUB_SHA:0:7}"
    #     # ------------------------------------------------------------------
    #     echo "GIT_TAG: ${GIT_TAG}"
    #     # ------------------------------------------------------------------
    #     echo "git_tag=${GIT_TAG}" >> $GITHUB_OUTPUT

    - name: Create tags üè∑
      id: tags
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
      with:
        images: ${{ inputs.gh_registry }}/${{ inputs.image_name }}
        tags: |
          type=sha
          type=raw,value=${{ inputs.version }}
          type=raw,value=${{ inputs.version }}-{{sha}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,prefix=${{ inputs.version }}-,event=branch

    ### https://github.com/docker/build-push-action
    ### https://github.com/docker/buildx/blob/master/docs/reference/buildx_build.md
    - name: Build image üõ†
      id: build
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        builder: ${{ steps.buildx.outputs.name }}
        platforms: ${{ inputs.platforms }}
        context: docker/
        # file: ./Dockerfile
        build-args: |
          SOURCE_IMAGE=${{ steps.source.outputs.source_fullname }}
          GIT_COMMIT=${{ steps.tags.outputs.git_tag }}
          VERSION=${{ inputs.version }}
          BUILD_DATE=${{ steps.date.outputs.date }}
        # cache-from: type=gha
        cache-to: type=registry,ref=${{ inputs.gh_registry }}/${{ inputs.image_name }}:buildcache,mode=max
        push: true
        tags: ${{ steps.tags.outputs.tags }}
        # tags: |
        #   ${{ inputs.gh_registry }}/${{ inputs.image_name }}:${{ steps.tags.outputs.version }}
        #   ${{ inputs.gh_registry }}/${{ inputs.image_name }}:${{ steps.tags.outputs.version }}-${{ steps.tags.outputs.git_tag }}

    - name: Inspect image digest üî¨
      shell: bash
      run: |
        echo "IMAGE DIGEST: ${{ steps.build.outputs.digest }}"

    - name: Inspect new image üî¨
      shell: bash
      run: |
        docker pull ${{ inputs.gh_registry }}/${{ inputs.image_name }}@${{ steps.build.outputs.digest }}
